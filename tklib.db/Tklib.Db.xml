<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tklib.Db</name>
    </assembly>
    <members>
        <member name="T:Tklib.Db.ConnectionString">
            <summary>
            Represents a connectionString.
            </summary>
        </member>
        <member name="M:Tklib.Db.ConnectionString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tklib.Db.ConnectionString"/> class.
            </summary>
            <param name="name"><see cref="P:Tklib.Db.ConnectionString.Name"/>.</param>.
        </member>
        <member name="P:Tklib.Db.ConnectionString.Name">
            <summary>
            Gets the name of this type of ConnectionString. Ex. "PostgreSQL" or "SQLite in-memory".
            </summary>
        </member>
        <member name="P:Tklib.Db.ConnectionString.Options">
            <summary>
            Gets a List of options for the connectionString.
            </summary>
        </member>
        <member name="T:Tklib.Db.ConnectionStrings">
            <summary>
            Provides functionallity related to ConnectionStrings.
            </summary>
        </member>
        <member name="M:Tklib.Db.ConnectionStrings.Get">
            <summary>
            Gets a list of all types of connections strings available.
            </summary>
            <returns>List of ConnectionStrings.</returns>
        </member>
        <member name="T:Tklib.Db.DatabaseConnectionSetting">
            <summary>
            One setting for a database connection (ex. 'hostname=127.0.0.0').
            </summary>
        </member>
        <member name="P:Tklib.Db.DatabaseConnectionSetting.Setting">
            <summary>
            Gets or Sets the name of a setting as used for the connection string. Ex. "Hostname" or "Password".
            </summary>
        </member>
        <member name="P:Tklib.Db.DatabaseConnectionSetting.Name">
            <summary>
            Gets or sets the name of a setting as shown to the user. If none is set, <see cref="P:Tklib.Db.DatabaseConnectionSetting.Setting"/> is returned instead.
            </summary>
        </member>
        <member name="P:Tklib.Db.DatabaseConnectionSetting.Value">
            <summary>
            Gets or Sets the value of a setting. Ex. "127.0.0.0" or "Hunter2".
            </summary>
        </member>
        <member name="P:Tklib.Db.DatabaseConnectionSetting.Description">
            <summary>
            Gets or Sets the description of a setting shown to a user. Might be also be usefull for documentation, even if setting is not displayed to user.
            </summary>
        </member>
        <member name="P:Tklib.Db.DatabaseConnectionSetting.DisplayToUser">
            <summary>
            Gets or sets a value indicating whether this setting should appear as a setting or if it's always used with it's default value.
            This allows that all settings are definied in one place, instead of having to seperatly declare "user facing settings" and
            "hardcoded settings".
            </summary>
        </member>
        <member name="M:Tklib.Db.DatabaseConnectionSetting.ToConnectionString">
            <summary>
            Returns the Option as a ConnectionString.
            </summary>
            <returns>The connections string.</returns>
        </member>
        <member name="T:Tklib.Db.Database">
            <summary>
            The database used by TrainKeep.
            </summary>
        </member>
        <member name="P:Tklib.Db.Database.Locomotives">
            <summary>
            Gets or sets the object containing everything related to Locomotives.
            </summary>
        </member>
        <member name="M:Tklib.Db.Database.SetConnectionString(System.String,System.String,System.String,System.String)">
            <summary>
            Sets the connection string.
            </summary>
            <param name="path">Path or URL to the Database(-server).</param>
            <param name="dbname">Name of the database, if applicable.</param>
            <param name="username">Username, if applicable.</param>
            <param name="password">Password, if applicable.</param>
        </member>
        <member name="M:Tklib.Db.Database.TestConnectionString(System.String,System.String,System.String,System.String)">
            <summary>
            Tests a connection string.
            </summary>
            <param name="path">Path or URL to the Database(-server).</param>
            <param name="dbname">Name of the database, if applicable.</param>
            <param name="username">Username, if applicable.</param>
            <param name="password">Password, if applicable.</param>
            <returns><see cref="T:Tklib.ConnectionState"/> describing the result.</returns>
        </member>
        <member name="M:Tklib.Db.Database.CheckConnectionState">
            <summary>
            Checks the current state of the connection.
            </summary>
            <returns><see cref="T:Tklib.ConnectionState"/> describing the result.</returns>
        </member>
        <member name="M:Tklib.Db.Database.WarmupConnectionsAsync">
            <summary>
            Tries to prepare the connection for usage, for example by already opening a bunch of connections and putting them into a connection pool.
            Idealy this should reduce the overhead of the first request.
            </summary>
        </member>
        <member name="M:Tklib.Db.Database.CloseConnections">
            <summary>
            Closes all open Connections.
            </summary>
        </member>
        <member name="T:Tklib.Db.Locomotives">
            <summary>
            Contains everything related to locomotives in the database.
            </summary>
        </member>
        <member name="P:Tklib.Db.Locomotives.Items">
            <summary>
            Gets a Collection of all locomotives in the database.
            </summary>
        </member>
        <member name="P:Tklib.Db.Locomotives.Models">
            <summary>
            Gets all locomotive models and their id's in the database.
            </summary>
        </member>
        <member name="P:Tklib.Db.Locomotives.Prototypes">
            <summary>
            Gets all locomotive prototypes and their id's in the database.
            </summary>
        </member>
        <member name="M:Tklib.Db.Locomotives.Load">
            <summary>
            Load the locomotives from the database. The Collections get updated accordingly.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>representing the async operation.</returns>
        </member>
        <member name="M:Tklib.Db.Locomotives.LoadImage(Tklib.Locomotive)">
            <summary>
            Try and load the image of an item. The item gets updated accordingly.
            </summary>
            <param name="locomotive"><see cref="T:Tklib.Locomotive"/> for which the image should be loaded.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>representing the async operation.</returns>
        </member>
    </members>
</doc>
